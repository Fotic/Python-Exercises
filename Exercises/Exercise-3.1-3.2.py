# Εισαγωγή στον Προγραμματισμό με Python
# Εβδομάδα 3
#===================================================
#
# Άσκηση 3.1 Αλγόριθμος ταξινόμησης φυσαλίδας (bubble sort)
#
# Μία απλη λύση είναι η παρακάτω:
#

##import random as rn
##
##N = int(input('Πλήθος στοιχείων λίστας: '))
##L = [rn.randint(1,100) for i in range(N)]
##print('Αρχική λίστα: ',L)
##
##for i in range(N-1):                  # Γράφω τη range(Ν-1) που θα επιστρέψει ΚΑΙ την τιμή Ν-2 όπως περιγράφει ο ψευδοκώδικας
##    for j in range(N-1-i):            # Γράφω τη range(Ν-1-i) που θα επιστρέψει ΚΑΙ την τιμή Ν-2-i
##        if L[j+1] < L[j]:             # Αν θέλω ταξινόμηση κατά φθίνουσα σειρά θα γράψω: if L[j+1] > L[j]:
##            L[j],L[j+1]=L[j+1],L[j]   # Για την αντιμετάθεση δεν χρειαζόμαστε ενδιάμεση μεταβλητή temp
##
##print('Ταξινομημένη λίστα: ',L)
##
#
#
#
#=========================================================================================================================
#
#
# Άσκηση 3.2 Ουρά δύο άκρων
#

##dqueue = []                               # Δημιουργώ τη λίστα (ουρά) η οποία στην αρχή είναι κενή 
##inp = None
##
##while True:
##    inp = input('Είσοδος μπορεί να είναι: Δεδομένο / 0Δεδομένο / r / 0r / q : ')
##    
##    if inp == 'q':                          # Ελέγχω για είσοδο q 
##        break
##     
##    if 'r' in inp:                          # Ελέγχω αν περιλαμβάνεται το r
##        if inp[0]=='0':                     # Αν προηγείται 0                      
##            dqueue.pop(0)                   # Αφαιρώ το πρώτο στοιχείο από την ουρά με pop(0)    
##        else:
##            dqueue.pop()                    # Αλλιώς αφαιρώ το τελευταίο στοιχείο από την ουρά απλά με pop()
##    else:                                   # Αλλιώς: (δηλ. αν ΔΕΝ περιλαμβάνεται το r)
##        if inp[0]=='0':                     # Ελέγχω το πρώτο στοιχείο αν είναι 0
##            dqueue.insert(0,inp[1:])            # Εισάγω το δεδομένo στη θέση 0, δηλ. στην αρχή της ουράς
##        else:                  
##            dqueue.append(inp)              # Αλλιώς εισάγω το δεδομένo στο τέλος της ουράς 
##                                 
##    print(dqueue)


# ΣΧΟΛΙΑ

# Όταν αφαιρώ στοιχεία μπορώ να γράψω conditional expression ώστε να ελέγχω 
# και για την περιπτωση που η ουρά είναι κενή
# Παράδειγμα:

##if inp[0]=='0':
##    dqueue.pop(0) if len(dqueue)>0 else print('Κενή ουρά!')

# Στη λύση που δίνω χειρίζομαι τα δεδομένα ως αλφαριθμητικά (str) 
# Αν χρειάζεται μπορώ να καλω την int() ή float() και να τα μετατρέπω σε ακέραιες ή πραγματικές τιμές





















